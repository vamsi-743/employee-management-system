CREATE DEFINER=`u276789778_polling_survey`@`%` PROCEDURE `GetTicketsList`(
	IN p_DistId INT,
    IN p_ConsId INT,
    IN p_MandId INT,
    IN p_DivId INT,
    IN p_SachiId INT,
    IN p_PartNo INT,
    IN p_VillNo INT,
    IN p_Gender INT,
	IN p_ReligionId INT,
    IN p_CasteId INT,
    IN p_Disability INT,
    IN p_GovtEmployee INT,
    IN p_age_min INT,
    IN p_age_max INT,
	IN p_status_id INT,
    IN p_navarathnalu_id INT,
    IN p_results_per_page INT, 
    IN p_pagenumber INT, 
    IN p_sort_column VARCHAR(100),
    IN p_sort_dir VARCHAR(5)
)
BEGIN
    DECLARE p_pagination_offset INT;
    DECLARE SqlQuery TEXT;
    
    SET @p_results_per_page = IFNULL(p_results_per_page, 50);
    SET @p_pagenumber = IFNULL(p_pagenumber, 1);

    IF p_pagenumber <= 0 THEN
        SET @p_pagenumber = 1;
    END IF;

    -- Calculate pagination offset
    SET @p_pagination_offset = @p_results_per_page * (@p_pagenumber - 1);

    SET @p_sort_column = IF (NULLIF(p_sort_column, '') IS NULL, 'surveydatetime', p_sort_column);
    SET @p_sort_dir = IF (NULLIF(p_sort_dir, '') IS NULL, 'DESC', p_sort_dir);

    -- Build the dynamic SQL query with placeholders
    
    SET @SqlQuery = CONCAT(
        'WITH FilteredData AS (
            select 
            tm.*, v.voter_id, v.voter_pk v_voter_pk, 
            v.voter_name, u.user_pk,u.username,
            na.navaratnalu_name,
            v.phone_no as voter_phone_no
            from ticket_master tm
			Left join voters v On tm.voter_pk = v.voter_pk
			left join users u ON v.volunteer_id = u.user_pk
            left join navaratnalu na ON na.navaratnalu_pk = tm.navaratnalu_id
            WHERE
                v.is_newregistration = false AND
                v.state_id = 5 ',
		IF(p_DistId IS NOT NULL, CONCAT(' AND v.district_id = ',p_DistId), ''),
		IF(p_ConsId IS NOT NULL, CONCAT(' AND v.consistency_id = ',p_ConsId), ''),
        IF(p_MandId IS NOT NULL, CONCAT(' AND v.mandal_id = ',p_MandId), ''),
        IF(p_DivId IS NOT NULL, CONCAT(' AND v.division_id = ',p_DivId), ''),
        IF(p_SachiId IS NOT NULL, CONCAT(' AND v.sachivalayam_id = ',p_SachiId), ''),
        IF(p_PartNo IS NOT NULL, CONCAT(' AND v.part_no = ',p_PartNo), ''),
        IF(p_VillNo IS NOT NULL, CONCAT(' AND v.village_id = ',p_VillNo), ''),
        IF(p_Gender IS NOT NULL, CONCAT(' AND v.gender = ', p_Gender), ''),
        IF(p_ReligionId IS NOT NULL, CONCAT(' AND v.religion_id = ', p_ReligionId), ''),
        IF(p_CasteId IS NOT NULL, CONCAT(' AND v.caste_id = ', p_CasteId), ''),
        IF(p_Disability IS NOT NULL, CONCAT(' AND v.disability = ', p_disability), ''),
        IF(p_GovtEmployee IS NOT NULL, CONCAT(' AND v.govt_employee = ', p_GovtEmployee), ''),
        IF(p_age_min IS NOT NULL and p_age_max IS NOT NULL, CONCAT(' AND v.age BETWEEN ', p_age_min, ' AND ', p_age_max),''),
        IF(p_age_min IS NOT NULL and p_age_max IS NULL, CONCAT(' AND v.age > ', p_age_min),''),
		IF(p_status_id IS NOT NULL, CONCAT(' AND tm.status_id = ', p_status_id), ''),
        IF(p_navarathnalu_id IS NOT NULL, CONCAT(' AND tm.navaratnalu_id = ', p_navarathnalu_id), ''),
        ') 
        SELECT *,
        (SELECT COUNT(*) FROM FilteredData) AS count,
		(SELECT COUNT(*) FROM FilteredData WHERE status_id = 1) AS open,
        (SELECT COUNT(*) FROM FilteredData WHERE status_id = 2) AS resolved,
        (SELECT COUNT(*) FROM FilteredData WHERE status_id = 3) AS cancelled,
        (SELECT COUNT(*) FROM FilteredData WHERE status_id = 4) AS escalated
        FROM FilteredData
        ORDER BY ', @p_sort_column, ' ', @p_sort_dir, '
        LIMIT ?, ?'
    );
	
    -- Prepare and execute the dynamic SQL query using placeholders
    PREPARE dynamic_statement FROM @SqlQuery;
    
    EXECUTE dynamic_statement USING @p_pagination_offset, @p_results_per_page;
    DEALLOCATE PREPARE dynamic_statement;
END